{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "qmap",
  "injectionSelector": "L:source -string -comment",
	"patterns": [
    {
      "name": "taggedTemplates",
      "contentName": "meta.embedded.block",
      "begin": "(qmap)\\((`)",
      "beginCaptures": {
        "1": {
          "name": "entity.name.function"
        },
        "2": {
          "name": "punctuation.definition.string.template.begin"
        }
      },
      "end": "(`)\\)",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.string.template.end"
        }
      },
      "patterns": [{ "include": "#qmap" }]
    },
    {
      "name": "taggedTemplates",
      "contentName": "meta.embedded.block",
      "begin": "(`)(/\\*\\s*qmap\\s*\\*/)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.string.template.begin"
        },
        "2": {
          "name": "comment.block"
        }
      },
      "end": "`",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.template.end"
        }
      },
      "patterns": [{ "include": "#qmap" }]
    }
	],
	"repository": {
    "qmap": {
      "patterns": [
        {
          "begin": "{",
          "end": "}",
          "patterns": [{ "include": "#root" }]
        },
        { "include": "#strings"},
        { "include": "#id"}
      ]
    },
    "root": {
      "patterns": [
        { "include": "#comment" },
        { "include": "#keywords" },
        { "include": "#block"},
        { "include": "#fn"},
        { "include": "#rename"},
        { "include": "#field_name"},
        { "include": "#dot"}
      ]
    },
    "dot": {
      "name": "punctuation.accessor",
      "match": "\\."
    },
    "comment": {
      "patterns": [
        {
          "name": "comment.line",
          "match": "//.*"
        },
        {
          "name": "comment.block",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
		"keywords": {
			"patterns": [
        {
          "name": "keyword.operator",
          "match": "((\\.\\.\\.)(\\s*&)?)|(,)|(!)"
        }
      ]
		},
    "fn": {
      "begin": "([a-zA-Z_$][a-zA-Z0-9_$]*\\s*(!)?\\s*)\\(",
      "beginCaptures": {
        "1": {
          "name": "entity.name.function"
        },
        "2": {
          "patterns": [{ "include": "#keywords" }]
        }
      },
      "end": "\\)",
      "patterns": [
        { "include": "#vars" },
        { "include": "#root" }
      ]
    },
    "block": {
      "begin": "{",
      "end": "}",
      "patterns": [{ "include": "#root" }]
    },
    "field_name": {
      "patterns": [
        { "include": "#id" },
        { "include": "#strings" }
      ]
    },
    "rename": {
      "name": "storage.type",
      "match": "(([a-zA-Z_$][a-zA-Z0-9_$]*)|(\"[^\"]*\")|('[^']*')):"
    },
    "vars": {
      "patterns": [
        { "include": "#primitive" },
        { "include": "#array_arg" },
        { "include": "#exvar" }
      ]
    },
    "exvar": {
      "name": "support.function",
      "match": "@[a-zA-Z_$][a-zA-Z0-9_$]*"
    },
    "primitive": {
      "begin": "@{",
      "beginCaptures": {
        "0": {
          "name": "keyword.operator"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "keyword.operator"
        }
      },
      "patterns": [
        { "include": "#strings" },
        { "include": "#bool" },
        { "include": "#number" }
      ]
    },
    "array_arg": {
      "begin": "@\\[",
      "beginCaptures": {
        "0": {
          "name": "support.function"
        }
      },
      "end": "\\]",
      "endCaptures": {
        "0": {
          "name": "support.function"
        }
      },
      "patterns": [{ "include": "#root" }]
    },
    "number": {
      "name": "constant.numeric",
      "match": "[+-]?[0-9]+(\\.[0-9]+)?"
    },
    "bool": {
      "name": "constant.language.boolean",
      "match": "true|false"
    },
    "id": {
      "name": "variable.other",
      "match": "[a-zA-Z_$][a-zA-Z0-9_$]*"
    },
		"strings": {
      "patterns": [
        {
          "name": "string.quoted.double",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape",
              "match": "\\\\."
            }
          ]
        }
      ]
		}
	},
	"scopeName": "source.qmap.injection"
}
